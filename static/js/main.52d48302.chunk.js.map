{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","searchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","SearchBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAgBeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BL,EAA3B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCyBLI,EA/BE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAYhB,OACI,8BAEOA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACA,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCTNC,EAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAWC,OAAO,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCSJC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKhB,UAAU,MAAf,SACA,uBACAA,UAAU,mCACViB,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCcHI,E,kDApBX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDY,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKhB,MAAMK,a,GAjBCa,aCoEZC,E,kDA1DX,aAAc,IAAD,8BACT,gBAmBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAnBzC,EAAKZ,MAAO,CACRjB,OAAQ,GACZ2B,YAAa,IAEbG,QAAQC,IAAI,eANH,E,qDASb,WAAqB,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAAAC,GACH,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GACF,EAAKd,SAAS,CAAEtB,OAAQoC,S,oBAYhC,WAEI,MAA8Bf,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTU,EAAiBrC,EAAOsC,QAAO,SAAAC,GAC7B,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASd,EAAYa,kBAI7D,OAAKxC,EAAO0C,OAQJ,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC+C,EAAD,CAAW/B,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQqC,WAX7B,qBAAKzC,UAAU,KAAf,SACI,oBAAIA,UAAU,KAAd,6B,GAvCH2B,aCCHqB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52d48302.chunk.js","sourcesContent":["import React from 'react';\n\n//destructure object and pass it to props\nconst Card = ({id, name, email}) => {\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src= {`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card';\n\nconst CardList = ({ robots }) =>{\n\n    // const cardComponent = robots.map((user, i) => {\n    //     return ( \n    //     <Card\n    //     key={i} \n    //     id={robots[i].id} \n    //     name={robots[i].name} \n    //     email={robots[i].email} />\n    //     )\n    // })\n\n    return (\n        <div>\n           {\n               robots.map((user, i) => {\n                return ( \n                <Card\n                key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email} />\n                )\n            })\n           } \n        </div>\n    )\n\n\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n\n    return (\n        <div style={{ overflowY: 'scroll' , border:'1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\n\nexport default Scroll;","import React from 'react';\n\nconst searchBox = ({searchChange}) => {\n\n    return(\n        <div className='pa2'>\n        <input \n        className='pa3 ba b--green bg-ligthest-blue'\n        type='search' placeholder='search robots'\n        onChange={searchChange}\n        />\n        </div>\n    )\n}\n\nexport default searchBox;","import React, { Component} from 'react';\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n\n    }\n\n    componentDidCatch(error, info){\n        this.setState({ hasError:true})\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Ooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry","import React, { Component } from 'react';\nimport CardList from '../components/CardList'\nimport Scroll from '../components/Scroll'\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n// const state = {\n//     robots: robots,\n//     searchfield: ''\n// }\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state ={\n            robots: [],\n        searchfield: ''\n        }\n        console.log('constructor')\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>{\n           return response.json();\n        })\n        .then(users =>{\n            this.setState({ robots: users });\n        })\n        \n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value })\n        // const filteredRobots = this.state.robots.filter(robots =>{\n        //     return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        // })\n        //console.log(filteredRobots);\n    }\n    render(){\n        //destructure\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot =>{\n                return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n            })\n        //if (robots.length === 0) or\n        //its possible to use ternary operator\n        if (!robots.length) {\n             return (\n                 <div className='tc'>\n                     <h1 className='f1'>Loading..</h1>\n                 </div>\n             )\n        } else {\n            return(\n                <div className=\"tc\">\n                    <h1 className=\"f2\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}